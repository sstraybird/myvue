{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observer/array.js","../src/observer/index.js","../src/state.js","../src/compiler/index.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val) {\n    return typeof val === 'function';\n}\n\nexport function isObject(val) {\n    return typeof val == 'object' && val !== null\n\n}","let oldArrayPrototype = Array.prototype\r\nexport let arrayMethods = Object.create(oldArrayPrototype);\r\n// arrayMethods.__proto__ = Array.prototype 继承\r\n\r\nlet methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'pop',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(method =>{\r\n    // 用户调用的如果是以上七个方法 会用我自己重写的，否则用原来的数组方法\r\n    arrayMethods[method] = function (...args) { //  args 是参数列表 arr.push(1,2,3)\r\n        console.log('数组发生变化')\r\n        oldArrayPrototype[method].call(this,...args); // arr.push(1,2,3);\r\n        let inserted;\r\n        let ob = this.__ob__; // 根据当前数组获取到observer实例\r\n        switch (method) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args ; // 就是新增的内容\r\n                break;\r\n            case 'splice':\r\n                inserted = args.slice(2)\r\n            default:\r\n                break;\r\n        }\r\n        // 如果有新增的内容要进行继续劫持, 我需要观测的数组里的每一项，而不是数组\r\n        // 更新操作.... todo...\r\n        if(inserted)  ob.observeArray(inserted)\r\n\r\n        // arr.push(1,2)\r\n        // arr.splice(0,1,xxxx)\r\n    }\r\n})","import {isObject} from \"../utils\";\r\nimport {arrayMethods} from \"./array\";\r\n\r\n// 1.如果数据是对象 会将对象不停的递归 进行劫持\r\n// 2.如果是数组，会劫持数组的方法，并对数组中不是基本数据类型的进行检测\r\n\r\n// 检测数据变化 类有类型 ， 对象无类型\r\nclass Observer {\r\n    constructor(data) { // 对对象中的所有属性 进行劫持\r\n        console.log('data111',data)\r\n        Object.defineProperty(data,'__ob__',{\r\n            value:this,\r\n            enumerable:false // 不可枚举的   防止walk循环到此属性从而出现死循环\r\n        })\r\n        // data.__ob__ = this; // 所有被劫持过的属性都有__ob__\r\n        if(Array.isArray(data)) {\r\n            // 数组劫持的逻辑\r\n            // 对数组原来的方法进行改写， 切片编程  高阶函数\r\n            data.__proto__ = arrayMethods;\r\n            // 如果数组中的数据是对象类型，需要监控对象的变化\r\n            this.observeArray(data);\r\n        }else {\r\n            this.walk(data); //对象劫持的逻辑\r\n        }\r\n    }\r\n    observeArray(data){ // 对我们数组的数组 和 数组中的对象再次劫持 递归了\r\n        // [{a:1},{b:2}]\r\n        data.forEach(item=>observe(item))\r\n    }\r\n    walk(data) { // 对象\r\n        Object.keys(data).forEach(key => {\r\n            defineReactive(data, key, data[key]);\r\n        })\r\n    }\r\n}\r\n\r\n// vue2 会对对象进行遍历 将每个属性 用defineProperty 重新定义 性能差\r\nfunction defineReactive(data,key,value){ // value有可能是对象\r\n    observe(value); // 本身用户默认值是对象套对象 需要递归处理 （性能差）\r\n    Object.defineProperty(data,key,{\r\n        get(){\r\n            console.log('get',data,key)\r\n            return value\r\n        },\r\n        set(newV){\r\n            observe(newV); // 如果用户赋值一个新对象 ，需要将这个对象进行劫持\r\n            value = newV;\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    // 如果是对象才观测\r\n    if (!isObject(data)) {\r\n        return;\r\n    }\r\n    if(data.__ob__){    //如果data已经被观测过就不用再观测了\r\n        return;\r\n    }\r\n    // 默认最外层的data必须是一个对象\r\n    console.log(\"observeData\",data)\r\n    // 默认最外层的data必须是一个对象\r\n    return new Observer(data)\r\n}","import {isFunction} from \"./utils\";\r\nimport { observe } from \"./observer/index\"; // node_resolve_plugin\r\n\r\nexport function initState(vm) { // 状态的初始化\r\n    const opts = vm.$options;\r\n    console.log(\"initSate\",opts)\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    // if(opts.computed){\r\n    //     initComputed();\r\n    // }\r\n    // if(opts.watch){\r\n    //     initWatch();\r\n    // }\r\n}\r\n\r\nfunction proxy(vm,source,key){\r\n    Object.defineProperty(vm,key,{\r\n        get(){\r\n            return vm[source][key];\r\n        },\r\n        set(newValue){\r\n            vm[source][key] = newValue\r\n        }\r\n    })\r\n}\r\n\r\nfunction initData(vm) { //\r\n    let data = vm.$options.data; // vm.$el  vue 内部会对属性检测如果是以$开头 不会进行代理\r\n    // vue2中会将data中的所有数据 进行数据劫持 Object.defineProperty\r\n    // 这个时候 vm 和 data没有任何关系, 通过_data 进行关联\r\n    data = vm._data = isFunction(data) ? data.call(vm) : data;//data可能是函数或者对象\r\n    console.log(\"data\",data)\r\n\r\n    // 用户去vm.xxx => vm._data.xxx\r\n    for(let key in data){ // vm.name = 'xxx'  vm._data.name = 'xxx'\r\n        proxy(vm,'_data',key);\r\n    }\r\n    observe(data);\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // a-1123_asd div 标签名    * 0个或多个\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; //  使用正则的分组，标签名的捕获，用来获取的标签名的 match后的索引为1的\n                                                    // ？表示可有可无 aa:xxx 命名空间：标签名 <aa:xxx></aa:xxx> ?:只匹配不捕获\n                                                    // 捕获到的被包进小括号里\n\n\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配开始标签的    <xxx\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配闭合标签的 </xxx>\n//           aa  =   \"  xxx \"  | '  xxxx '  | xxx\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // a=b  a=\"b\"  a='b'\nconst startTagClose = /^\\s*(\\/?)>/; //     />   <div/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{aaaaa}}\n\n\nfunction parserHTML(html) {\n    function advance(len) {\n        html = html.substring(len);\n    }\n    function parseStartTag() {\n        const start = html.match(startTagOpen);\n        console.log('start',start)\n        if (start) {\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            advance(start[0].length);\n            console.log('html',html)\n            let end;\n            // 如果没有遇到标签结尾就不停的解析\n            let attr;\n\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                console.log('attr',attr)\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n                advance(attr[0].length)\n            }\n        }\n        return false\n    }\n\n    while (html) { // 看要解析的内容是否存在，如果存在就不停的解析\n        let textEnd = html.indexOf('<'); // 当前解析的开头\n        console.log('textEnd',textEnd)\n        if (textEnd == 0) {\n            const startTagMatch = parseStartTag(html); // 解析开始标签\n            break\n        }\n    }\n}\n// html字符串解析成 对应的脚本来触发 tokens  <div id=\"app\"> {{name}}</div>\n\nexport function compileToFunction(template) {\n    console.log('compileToFunction template',template)\n    let r = '<xxxx></xxxx>'.match(new RegExp(qnameCapture))\n    console.log(r)\n\n    //开源库htmlparser2可以完成此功能\n    let root = parserHTML(template)\n\n}\n","//插件一般都是一个函数，需要调用一下才能用\r\n\r\nimport {initState} from \"./state\";\r\nimport {compileToFunction} from \"./compiler/index\";\r\n\r\nexport function initMixin(Vue) {        //这里的Vue是VUe构造函数\r\n    Vue.prototype._init = function(options) {\r\n        console.log(options);\r\n        const vm = this     //this 都是指原型的实例 就是在index.html new出的vm   这里赋值给vm方便阅读 var that = this;\r\n        vm.$options = options    // 后面会对options进行扩展操作\r\n\r\n        // 对数据进行初始化 watch computed props data ...\r\n        initState(vm); // vm.$options.data  数据劫持\r\n\r\n        if(vm.$options.el){\r\n            // 将数据挂载到这个模板上\r\n            vm.$mount(vm.$options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n        const options = vm.$options\r\n        el = document.querySelector(el);\r\n        console.log('el',el)\r\n        vm.$el = el;\r\n        // 把模板转化成 对应的渲染函数 =》 虚拟dom概念 vnode =》 diff算法 更新虚拟dom =》 产生真实节点，更新\r\n        if(!options.render){ // 没有render用template，目前没render\r\n            let template = options.template;\r\n            if(!template && el){ // 用户也没有传递template 就取el的内容作为模板\r\n                template = el.outerHTML;\r\n                console.log('template',template)\r\n                let render = compileToFunction(template);\r\n                options.render = render;\r\n            }\r\n        }\r\n        // options.render 就是渲染函数\r\n    }\r\n}","import { initMixin } from \"./init\";\n\nfunction Vue(options) {     //构造函数模拟类，类中写prototype比较怪，用function符合习惯\n    // options 为用户传入的选项\n    this._init(options); // 创造一个实列进行初始化操作，核心操作， 组件也需要初始化，组件也应该有个_init方法,所以把_init变成公共方法，_表示私有，约定，\n                        //this 谁new 就是谁，实例上在initMixin上加了_init方法\n}\n\n//拆分，把不同的功能拆分到不同的文件中，通过注入的方式来使用\n// 扩展原型的，\ninitMixin(Vue);     //在原型上添加_init方法， 组件也需要初始化，组件也应该有个_init方法,所以把_init变成公共方法\n\nexport default Vue    //导出的会放到window下"],"names":["isFunction","val","isObject","oldArrayPrototype","Array","prototype","arrayMethods","Object","create","methods","forEach","method","console","log","args","call","inserted","ob","__ob__","slice","observeArray","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","item","observe","keys","key","defineReactive","get","set","newV","initState","vm","opts","$options","initData","proxy","source","newValue","_data","ncname","qnameCapture","startTagOpen","RegExp","attribute","startTagClose","parserHTML","html","advance","len","substring","parseStartTag","start","match","tagName","attrs","length","end","attr","push","name","textEnd","indexOf","startTagMatch","compileToFunction","template","r","root","initMixin","Vue","_init","options","el","$mount","document","querySelector","$el","render","outerHTML"],"mappings":"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"}